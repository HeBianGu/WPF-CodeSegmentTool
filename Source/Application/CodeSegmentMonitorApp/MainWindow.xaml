<wpfcontrollib:WindowBase x:Class="CodeSegmentMonitorApp.MainWindow"
        xmlns:wpfcontrollib="clr-namespace:HeBianGu.General.WpfControlLib;assembly=HeBianGu.General.WpfControlLib"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
         Style="{StaticResource ResourceKey=DefaultWindowStyle}"
        xmlns:local="clr-namespace:CodeSegmentMonitorApp"
        xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
        xmlns:controls="clr-namespace:HeBianGu.General.WpfControlLib.Controls;assembly=HeBianGu.General.WpfControlLib"
        mc:Ignorable="d" 
        Title="代码段管理工具" Height="700" Width="1000">
    <Window.Resources>

        <Style x:Key="CodeSnippetParagraph">
            <Setter Property="TextBlock.FontFamily" Value="Courier New" />
            <Setter Property="TextBlock.FontSize" Value="16" />
            <Setter Property="TextBlock.TextWrapping" Value="Wrap" />
            <Setter Property="TextBlock.Margin" Value="10" />
            <Setter Property="TextBlock.Background" Value="#eeeeee" />
            <Setter Property="TextBlock.TextAlignment" Value="Left" />
        </Style>
        
    

        <Style TargetType="{x:Type TextBlock}" x:Key="textblock_nomarl">
            <Setter Property="FontSize" Value="14"/>
            <Setter Property="TextWrapping" Value="Wrap"/>
            <Setter Property="Width" Value="200"/>
            <Setter Property="VerticalAlignment" Value="Center"/>
        </Style>

        <Style TargetType="{x:Type TextBox}" >
            <Setter Property="FontSize" Value="14"/>
            <Setter Property="TextWrapping" Value="Wrap"/>
            <Setter Property="Width" Value="200"/>
        </Style>
        
        <Style TargetType="{x:Type TextBlock}" x:Key="textblock_black"  BasedOn="{StaticResource textblock_nomarl}">
            <Setter Property="FontWeight" Value="Black"/>
        </Style>

        <!--设置默认样式-->
        <Style TargetType="{x:Type TextBlock}" BasedOn="{StaticResource textblock_nomarl}"/>

        <Style TargetType="{x:Type ListBoxItem}" x:Key="CodeListBoxItem">
            <Setter Property="Height" Value="30"/>
            <Setter Property="Foreground" Value="{DynamicResource S_WhiteNotice}"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate  TargetType="ListBoxItem">
                        <Grid>
                            <Border x:Name="ItemBackground" Background="{TemplateBinding Background}" 
                                    BorderBrush="{TemplateBinding BorderBrush}"
                                    BorderThickness="{TemplateBinding BorderThickness}"/>

                            <wpfcontrollib:FButton x:Name="btn_image" FIcon="&#xe600;" Foreground="{TemplateBinding Foreground}" Style="{StaticResource FButton_Transparency}" Width="Auto" HorizontalAlignment="Left" />

                            <TextBlock Text="{Binding FileName}" VerticalAlignment="Center" Margin="30,0"/>

                        </Grid>

                        <ControlTemplate.Triggers>
                            <Trigger Property="IsSelected" Value="True">
                                <Setter TargetName="ItemBackground" Property="Background" Value="{DynamicResource S_AccentBrush}" />
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="ItemBackground" Property="Background" Value="{DynamicResource S_AccentBrush_MouseOver}" />
                                <Setter Property="Foreground" Value="{DynamicResource S_WhiteNotice}" />
                            </Trigger>

                            <DataTrigger Binding="{Binding Author}" Value="Microsoft Corporation">
                                <Setter TargetName="btn_image" Property="FIcon" Value="&#xe706;" />
                            </DataTrigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

    </Window.Resources>
    <Grid>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="200"/>
            <ColumnDefinition Width="5"/>
            <ColumnDefinition Width="*"/>
        </Grid.ColumnDefinitions>
        <Grid.RowDefinitions>
            <RowDefinition Height="40"/>
            <RowDefinition Height="250*"/>
            <RowDefinition Height="40"/>
        </Grid.RowDefinitions>

        <GridSplitter Grid.Column="1"/>

        <wpfcontrollib:FTextBox Width="800" Height="30" HorizontalAlignment="Left" 
                                Text="{Binding Path,UpdateSourceTrigger=PropertyChanged}" 
                                Grid.ColumnSpan="4" Margin="3" Style="{StaticResource LabelOpenFolderTextBox}">
            <i:Interaction.Triggers>
                <i:EventTrigger EventName="TextChanged">
                    <i:InvokeCommandAction Command="{Binding RelayCommand}" CommandParameter="TextChanged"/>
                </i:EventTrigger>
            </i:Interaction.Triggers>
        </wpfcontrollib:FTextBox>

        <ListBox x:Name="listBox" Grid.Row="1" Background="{DynamicResource S_GrayLightOpacity}" ItemsSource="{Binding Collection,Mode=TwoWay}" SelectedItem="{Binding Selection,Mode=TwoWay}" ItemContainerStyle="{StaticResource CodeListBoxItem}"/>



        <Grid Grid.Column="2" Grid.Row="1"  Background="{DynamicResource S_GrayLightOpacity}">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="200"/>
            </Grid.ColumnDefinitions>

            <Grid Grid.Column="1">
                <Grid.RowDefinitions>
                    <RowDefinition Height="*"/>
                    <RowDefinition Height="3*"/>
                    <RowDefinition Height="*"/>
                    <RowDefinition Height="*"/>
                    <RowDefinition Height="*"/>
                    <RowDefinition Height="*"/>
                    <RowDefinition Height="*"/>
                    <RowDefinition Height="*"/>
                    <RowDefinition Height="*"/>
                    <RowDefinition Height="*"/>
                    <RowDefinition Height="5*"/>
                </Grid.RowDefinitions>

                <TextBlock Grid.Row="0" Text="说明" Style="{StaticResource textblock_black}"/>
                <TextBox Grid.Row="1" Text="{Binding ElementName=listBox,Path=SelectedItem.Description}" />
                <TextBlock Grid.Row="2" Text="快捷方式"  Style="{StaticResource textblock_black}"/>
                <TextBox Grid.Row="3" Text="{Binding ElementName=listBox,Path=SelectedItem.Shortcut}"/>
                <TextBlock Grid.Row="4" Text="片段类型"  Style="{StaticResource textblock_black}"/>
                <TextBox Grid.Row="5" Text="{Binding ElementName=listBox,Path=SelectedItem.SnippetTypes}"/>
                <TextBlock Grid.Row="6" Text="作者"  Style="{StaticResource textblock_black}"/>
                <TextBox Grid.Row="7" Text="{Binding ElementName=listBox,Path=SelectedItem.Author}"/>
                <TextBlock Grid.Row="8" Text="标题"  Style="{StaticResource textblock_black}"/>
                <TextBox Grid.Row="9" Text="{Binding ElementName=listBox,Path=SelectedItem.Title}"/>
                
            </Grid>

            <Grid Grid.Column="0">
                <controls:BindRichTextBox Background="{DynamicResource S_GrayLightOpacity}" BindText="{Binding ElementName=listBox,Path=SelectedItem.Snippet,Mode=TwoWay}"/>
            </Grid>

        </Grid>

        <Grid Grid.Row="2" Grid.ColumnSpan="3">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="5*"/>
            </Grid.ColumnDefinitions>

            <wpfcontrollib:FButton Content="添加.." Grid.Column="0" Margin="2,0" Command="{Binding RelayCommand}" CommandParameter="Add"/>

            <StackPanel Orientation="Horizontal" Grid.Column="1" HorizontalAlignment="Right">
                <wpfcontrollib:FButton Content="移除.."  Margin="10,0" Command="{Binding RelayCommand}" CommandParameter="Remove"/>
                <wpfcontrollib:FButton Content="保存.."  Margin="10,0" Command="{Binding RelayCommand}" CommandParameter="Save"/>
                <wpfcontrollib:FButton Content="另存为.."  Margin="10,0" Command="{Binding RelayCommand}" CommandParameter="SaveOther"/>
            </StackPanel>
        </Grid>


    </Grid>


    <i:Interaction.Triggers>
        <i:EventTrigger EventName="Loaded">
            <i:InvokeCommandAction Command="{Binding RelayCommand}" CommandParameter="Loaded"/>
        </i:EventTrigger>
    </i:Interaction.Triggers>
</wpfcontrollib:WindowBase>
